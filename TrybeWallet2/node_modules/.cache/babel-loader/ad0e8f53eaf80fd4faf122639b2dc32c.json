{"ast":null,"code":"var _jsxFileName = \"/home/clair/Documentos/trybe/Projetos/sd-021-b-project-trybewallet/src/pages/Wallet.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { saveCurrencies } from '../actions';\nimport Form from './Form';\nimport Table from './Table';\n\nclass Wallet extends React.Component {\n  constructor() {\n    super();\n\n    this.calcDespesaTotal = () => {\n      const {\n        expenses\n      } = this.props;\n      const alo = expenses.map(elem => {\n        const {\n          currency\n        } = elem;\n        const resultado = elem.value * elem.exchangeRates[currency].ask; //está acessando no rates o mesmo nome da currency\n\n        return resultado;\n      });\n      console.log(alo);\n      return '';\n    };\n\n    this.state = {\n      despesaTotal: 0,\n      currencies: 'BRL'\n    };\n  }\n\n  componentDidMount() {\n    const {\n      dispatch\n    } = this.props;\n    fetch('https://economia.awesomeapi.com.br/json/all').then(response => response.json()).then(currencies => dispatch(saveCurrencies(Object.keys(currencies).filter(coins => coins !== 'USDT'))));\n  } // pegar value do input e o currency\n  // achar o ask do currency e * o value\n\n\n  render() {\n    const {\n      email\n    } = this.props;\n    const {\n      despesaTotal,\n      currencies\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, \"TrybeWallet\"), /*#__PURE__*/React.createElement(\"h3\", {\n      \"data-testid\": \"email-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, email), /*#__PURE__*/React.createElement(\"h3\", {\n      \"data-testid\": \"total-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, ' ', \"Despesa total de gastos:\", ' ', despesaTotal, this.calcDespesaTotal()), /*#__PURE__*/React.createElement(\"h3\", {\n      \"data-testid\": \"header-currency-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, ' ', currencies, ' '), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = globalState => ({\n  email: globalState.user.email,\n  expenses: globalState.wallet.expenses\n});\n\nexport default connect(mapStateToProps)(Wallet);\nWallet.propTypes = {\n  email: PropTypes.string.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired\n};","map":{"version":3,"names":["React","connect","PropTypes","saveCurrencies","Form","Table","Wallet","Component","constructor","calcDespesaTotal","expenses","props","alo","map","elem","currency","resultado","value","exchangeRates","ask","console","log","state","despesaTotal","currencies","componentDidMount","dispatch","fetch","then","response","json","Object","keys","filter","coins","render","email","mapStateToProps","globalState","user","wallet","propTypes","string","isRequired","func","arrayOf","object"],"sources":["/home/clair/Documentos/trybe/Projetos/sd-021-b-project-trybewallet/src/pages/Wallet.js"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { saveCurrencies } from '../actions';\nimport Form from './Form';\nimport Table from './Table';\n\nclass Wallet extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      despesaTotal: 0,\n      currencies: 'BRL',\n    };\n  }\n\n  componentDidMount() {\n    const { dispatch } = this.props;\n    fetch('https://economia.awesomeapi.com.br/json/all')\n      .then((response) => response.json())\n      .then((currencies) => dispatch(saveCurrencies(Object.keys(currencies)\n        .filter((coins) => coins !== 'USDT'))));\n  }\n  // pegar value do input e o currency\n  // achar o ask do currency e * o value\n\n  calcDespesaTotal = () => {\n    const { expenses } = this.props;\n    const alo = expenses.map((elem) => {\n      const { currency } = elem;\n      const resultado = elem.value * elem.exchangeRates[currency].ask; //está acessando no rates o mesmo nome da currency\n      return resultado;\n    });\n    console.log(alo);\n    return '';\n  }\n\n  render() {\n    const { email } = this.props;\n    const { despesaTotal, currencies } = this.state;\n    return (\n      <header>\n        <h1>TrybeWallet</h1>\n        <h3 data-testid=\"email-field\">{email}</h3>\n        <h3 data-testid=\"total-field\">\n          {' '}\n          Despesa total de gastos:\n          {' '}\n          {despesaTotal}\n          {this.calcDespesaTotal()}\n        </h3>\n        <h3 data-testid=\"header-currency-field\">\n          {' '}\n          {currencies}\n          {' '}\n        </h3>\n        <Form />\n        <Table />\n      </header>\n    );\n  }\n}\nconst mapStateToProps = (globalState) => ({\n  email: globalState.user.email,\n  expenses: globalState.wallet.expenses,\n});\nexport default connect(mapStateToProps)(Wallet);\n\nWallet.propTypes = {\n  email: PropTypes.string.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,MAAN,SAAqBN,KAAK,CAACO,SAA3B,CAAqC;EACnCC,WAAW,GAAG;IACZ;;IADY,KAkBdC,gBAlBc,GAkBK,MAAM;MACvB,MAAM;QAAEC;MAAF,IAAe,KAAKC,KAA1B;MACA,MAAMC,GAAG,GAAGF,QAAQ,CAACG,GAAT,CAAcC,IAAD,IAAU;QACjC,MAAM;UAAEC;QAAF,IAAeD,IAArB;QACA,MAAME,SAAS,GAAGF,IAAI,CAACG,KAAL,GAAaH,IAAI,CAACI,aAAL,CAAmBH,QAAnB,EAA6BI,GAA5D,CAFiC,CAEgC;;QACjE,OAAOH,SAAP;MACD,CAJW,CAAZ;MAKAI,OAAO,CAACC,GAAR,CAAYT,GAAZ;MACA,OAAO,EAAP;IACD,CA3Ba;;IAEZ,KAAKU,KAAL,GAAa;MACXC,YAAY,EAAE,CADH;MAEXC,UAAU,EAAE;IAFD,CAAb;EAID;;EAEDC,iBAAiB,GAAG;IAClB,MAAM;MAAEC;IAAF,IAAe,KAAKf,KAA1B;IACAgB,KAAK,CAAC,6CAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESJ,UAAD,IAAgBE,QAAQ,CAACvB,cAAc,CAAC4B,MAAM,CAACC,IAAP,CAAYR,UAAZ,EAC3CS,MAD2C,CACnCC,KAAD,IAAWA,KAAK,KAAK,MADe,CAAD,CAAf,CAFhC;EAID,CAfkC,CAgBnC;EACA;;;EAaAC,MAAM,GAAG;IACP,MAAM;MAAEC;IAAF,IAAY,KAAKzB,KAAvB;IACA,MAAM;MAAEY,YAAF;MAAgBC;IAAhB,IAA+B,KAAKF,KAA1C;IACA,oBACE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,iBADF,eAEE;MAAI,eAAY,aAAhB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAA+Bc,KAA/B,CAFF,eAGE;MAAI,eAAY,aAAhB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACG,GADH,8BAGG,GAHH,EAIGb,YAJH,EAKG,KAAKd,gBAAL,EALH,CAHF,eAUE;MAAI,eAAY,uBAAhB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACG,GADH,EAEGe,UAFH,EAGG,GAHH,CAVF,eAeE,oBAAC,IAAD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAfF,eAgBE,oBAAC,KAAD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAhBF,CADF;EAoBD;;AArDkC;;AAuDrC,MAAMa,eAAe,GAAIC,WAAD,KAAkB;EACxCF,KAAK,EAAEE,WAAW,CAACC,IAAZ,CAAiBH,KADgB;EAExC1B,QAAQ,EAAE4B,WAAW,CAACE,MAAZ,CAAmB9B;AAFW,CAAlB,CAAxB;;AAIA,eAAeT,OAAO,CAACoC,eAAD,CAAP,CAAyB/B,MAAzB,CAAf;AAEAA,MAAM,CAACmC,SAAP,GAAmB;EACjBL,KAAK,EAAElC,SAAS,CAACwC,MAAV,CAAiBC,UADP;EAEjBjB,QAAQ,EAAExB,SAAS,CAAC0C,IAAV,CAAeD,UAFR;EAGjBjC,QAAQ,EAAER,SAAS,CAAC2C,OAAV,CAAkB3C,SAAS,CAAC4C,MAA5B,EAAoCH;AAH7B,CAAnB"},"metadata":{},"sourceType":"module"}