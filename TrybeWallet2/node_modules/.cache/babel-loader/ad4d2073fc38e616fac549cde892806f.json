{"ast":null,"code":"var _jsxFileName = \"/home/clair/Documentos/trybe/Projetos/sd-021-b-project-trybewallet/src/pages/Login.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom'; // import { saveInputs } from '../actions';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.onChangeInput = _ref => {\n      let {\n        target\n      } = _ref;\n      // pegar o value dos inputs de forma dinamica\n      const {\n        name,\n        value\n      } = target;\n      this.setState({\n        [name]: value\n      }, this.checkInputs());\n    };\n\n    this.checkInputs = () => {\n      const {\n        email,\n        senha\n      } = this.state;\n      const numCaractMin = 6;\n      const reg = /^\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/; // https://pt.stackoverflow.com/questions/1386/express%C3%A3o-regular-para-valida%C3%A7%C3%A3o-de-e-mail\n\n      const valido = reg.test(email);\n      console.log(valido);\n\n      if (senha.length >= numCaractMin && valido) {\n        this.setState({\n          statusSendButton: false\n        });\n      }\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        addInputs\n      } = this.props;\n      const {\n        redirect\n      } = this.state;\n      addInputs(this.state);\n    };\n\n    this.state = {\n      email: '',\n      senha: '',\n      statusSendButton: true,\n      redirect: false\n    };\n  }\n\n  render() {\n    const {\n      email,\n      senha,\n      // buttonSubmit,\n      statusSendButton,\n      redirect\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, \"Email:\", ' ', /*#__PURE__*/React.createElement(\"input\", {\n      id: \"email\",\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.onChangeInput,\n      \"data-testid\": \"email-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"senha\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, \"Senha:\", ' ', /*#__PURE__*/React.createElement(\"input\", {\n      id: \"senha\",\n      type: \"password\",\n      name: \"senha\",\n      value: senha,\n      onChange: this.onChangeInput,\n      \"data-testid\": \"password-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\" // onClick={ this.buttonSubmit }\n      ,\n      disabled: statusSendButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, \"Entrar\"), redirect && /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/carteira\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 22\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  addInputs: input => dispatch(saveInputs(input))\n});\n\nexport default connect(null, mapDispatchToProps)(Login); // Login.propTypes = {\n//   onChangeInput: PropTypes.func.isRequired,\n//   email: PropTypes.string.isRequired,\n//   senha: PropTypes.string.isRequired,\n//   handleButton: PropTypes.func.isRequired,\n// };\n\nLogin.propTypes = {\n  addInputs: PropTypes.func\n};","map":{"version":3,"names":["React","connect","PropTypes","Redirect","Login","Component","constructor","onChangeInput","target","name","value","setState","checkInputs","email","senha","state","numCaractMin","reg","valido","test","console","log","length","statusSendButton","handleSubmit","event","preventDefault","addInputs","props","redirect","render","mapDispatchToProps","dispatch","input","saveInputs","propTypes","func"],"sources":["/home/clair/Documentos/trybe/Projetos/sd-021-b-project-trybewallet/src/pages/Login.js"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\n// import { saveInputs } from '../actions';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      senha: '',\n      statusSendButton: true,\n      redirect: false,\n    };\n  }\n\n  onChangeInput = ({ target }) => { // pegar o value dos inputs de forma dinamica\n    const { name, value } = target;\n    this.setState({ [name]: value }, this.checkInputs());\n  };\n\n  // Botao comeÃ§a desativado e precisa ativar somente quando\n  // estiver com email no formato valido e senha de no min 6 caracteres\n  checkInputs = () => {\n    const { email, senha } = this.state;\n    const numCaractMin = 6;\n    const reg = /^\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/; // https://pt.stackoverflow.com/questions/1386/express%C3%A3o-regular-para-valida%C3%A7%C3%A3o-de-e-mail\n    const valido = reg.test(email);\n    console.log(valido);\n    if (senha.length >= numCaractMin && valido) {\n      this.setState({ statusSendButton: false });\n    }\n  }\n\n  // buttonSubmit = (event) => { // trocar estado do redirect quando clicar\n  //   const { addInputs } = this.props;\n  //   addInputs(this.state);\n  //   this.setState({ redirect: true });\n  // };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { addInputs } = this.props;\n    const { redirect } = this.state;\n    addInputs(this.state);\n\n  }\n\n  render() {\n    const { email,\n      senha,\n      // buttonSubmit,\n      statusSendButton,\n      redirect,\n    } = this.state;\n    return (\n      <form onSubmit={ this.handleSubmit }>\n        <label htmlFor=\"email\">\n          Email:\n          {' '}\n          <input\n            id=\"email\"\n            type=\"email\"\n            name=\"email\"\n            value={ email }\n            onChange={ this.onChangeInput }\n            data-testid=\"email-input\"\n          />\n        </label>\n        <label htmlFor=\"senha\">\n          Senha:\n          {' '}\n          <input\n            id=\"senha\"\n            type=\"password\"\n            name=\"senha\"\n            value={ senha }\n            onChange={ this.onChangeInput }\n            data-testid=\"password-input\"\n          />\n        </label>\n        <button\n          type=\"button\"\n          // onClick={ this.buttonSubmit }\n          disabled={ statusSendButton }\n        >\n          Entrar\n        </button>\n        {redirect && <Redirect to=\"/carteira\" />}\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  addInputs: (input) => dispatch(saveInputs(input)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n\n// Login.propTypes = {\n//   onChangeInput: PropTypes.func.isRequired,\n//   email: PropTypes.string.isRequired,\n//   senha: PropTypes.string.isRequired,\n//   handleButton: PropTypes.func.isRequired,\n// };\n\nLogin.propTypes = {\n  addInputs: PropTypes.func,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}