{"ast":null,"code":"var _jsxFileName = \"/home/clair/Documentos/trybe/Projetos/sd-021-b-project-trybewallet/src/pages/Login.js\";\nimport React from 'react';\nimport { connect } from 'react-redux'; // import PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\nimport { saveInputs } from '../actions';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.onChangeInput = _ref => {\n      let {\n        target\n      } = _ref;\n      // pegar o value dos inputs de forma dinamica\n      const {\n        name,\n        value\n      } = target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.checkInputs = () => {\n      const {\n        email,\n        senha\n      } = this.state;\n      const numCaractMin = 6;\n      const reg = /^\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/; // https://pt.stackoverflow.com/questions/1386/express%C3%A3o-regular-para-valida%C3%A7%C3%A3o-de-e-mail\n\n      const valido = reg.test(email);\n      console.log(valido);\n\n      if (senha.length >= numCaractMin && valido) {\n        this.setState({\n          statusSendButton: false\n        });\n      }\n    };\n\n    this.state = {\n      email: '',\n      senha: '',\n      statusSendButton: true\n    };\n  }\n\n  render() {\n    const {\n      email,\n      senha,\n      handleButton,\n      statusSendButton\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, \"Email:\", ' ', /*#__PURE__*/React.createElement(\"input\", {\n      id: \"email\",\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.onChangeInput,\n      \"data-testid\": \"email-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"senha\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, \"Senha:\", ' ', /*#__PURE__*/React.createElement(\"input\", {\n      id: \"senha\",\n      type: \"password\",\n      name: \"senha\",\n      value: senha,\n      onChange: this.onChangeInput,\n      \"data-testid\": \"password-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Link, {\n      to: \"Wallet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: handleButton,\n      disabled: statusSendButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, \"Entrar\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  addInputs: inputs => dispatch(saveInputs(input))\n});\n\nexport default connect()(Login); // Login.propTypes = {\n//   onChangeInput: PropTypes.func.isRequired,\n//   email: PropTypes.string.isRequired,\n//   senha: PropTypes.string.isRequired,\n//   handleButton: PropTypes.func.isRequired,\n// };","map":{"version":3,"names":["React","connect","Link","saveInputs","Login","Component","constructor","onChangeInput","target","name","value","setState","checkInputs","email","senha","state","numCaractMin","reg","valido","test","console","log","length","statusSendButton","render","handleButton","mapDispatchToProps","dispatch","addInputs","inputs","input"],"sources":["/home/clair/Documentos/trybe/Projetos/sd-021-b-project-trybewallet/src/pages/Login.js"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n// import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { saveInputs } from '../actions';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      senha: '',\n      statusSendButton: true,\n    };\n  }\n\n  onChangeInput = ({ target }) => { // pegar o value dos inputs de forma dinamica\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  // Botao comeÃ§a desativado e precisa ativar somente quando\n  // estiver com email no formato valido e senha de no min 6S\n  checkInputs = () => {\n    const { email, senha } = this.state;\n    const numCaractMin = 6;\n    const reg = /^\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/; // https://pt.stackoverflow.com/questions/1386/express%C3%A3o-regular-para-valida%C3%A7%C3%A3o-de-e-mail\n    const valido = reg.test(email);\n    console.log(valido);\n    if (senha.length >= numCaractMin && valido) {\n      this.setState({ statusSendButton: false });\n    }\n  }\n\n  render() {\n    const { email,\n      senha,\n      handleButton,\n      statusSendButton,\n    } = this.state;\n    return (\n      <form>\n        <label htmlFor=\"email\">\n          Email:\n          {' '}\n          <input\n            id=\"email\"\n            type=\"email\"\n            name=\"email\"\n            value={ email }\n            onChange={ this.onChangeInput }\n            data-testid=\"email-input\"\n          />\n        </label>\n        <label htmlFor=\"senha\">\n          Senha:\n          {' '}\n          <input\n            id=\"senha\"\n            type=\"password\"\n            name=\"senha\"\n            value={ senha }\n            onChange={ this.onChangeInput }\n            data-testid=\"password-input\"\n          />\n        </label>\n        <Link to=\"Wallet\">\n          <button\n            type=\"submit\"\n            onClick={ handleButton }\n            disabled={ statusSendButton }\n          >\n            Entrar\n          </button>\n        </Link>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  addInputs: (inputs) => dispatch(saveInputs(input))\n});\n\nexport default connect()(Login);\n// Login.propTypes = {\n//   onChangeInput: PropTypes.func.isRequired,\n//   email: PropTypes.string.isRequired,\n//   senha: PropTypes.string.isRequired,\n//   handleButton: PropTypes.func.isRequired,\n// };\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,QAA2B,YAA3B;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;EAClCC,WAAW,GAAG;IACZ;;IADY,KASdC,aATc,GASE,QAAgB;MAAA,IAAf;QAAEC;MAAF,CAAe;MAAE;MAChC,MAAM;QAAEC,IAAF;QAAQC;MAAR,IAAkBF,MAAxB;MACA,KAAKG,QAAL,CAAc;QAAE,CAACF,IAAD,GAAQC;MAAV,CAAd;IACD,CAZa;;IAAA,KAgBdE,WAhBc,GAgBA,MAAM;MAClB,MAAM;QAAEC,KAAF;QAASC;MAAT,IAAmB,KAAKC,KAA9B;MACA,MAAMC,YAAY,GAAG,CAArB;MACA,MAAMC,GAAG,GAAG,gDAAZ,CAHkB,CAG4C;;MAC9D,MAAMC,MAAM,GAAGD,GAAG,CAACE,IAAJ,CAASN,KAAT,CAAf;MACAO,OAAO,CAACC,GAAR,CAAYH,MAAZ;;MACA,IAAIJ,KAAK,CAACQ,MAAN,IAAgBN,YAAhB,IAAgCE,MAApC,EAA4C;QAC1C,KAAKP,QAAL,CAAc;UAAEY,gBAAgB,EAAE;QAApB,CAAd;MACD;IACF,CAzBa;;IAEZ,KAAKR,KAAL,GAAa;MACXF,KAAK,EAAE,EADI;MAEXC,KAAK,EAAE,EAFI;MAGXS,gBAAgB,EAAE;IAHP,CAAb;EAKD;;EAoBDC,MAAM,GAAG;IACP,MAAM;MAAEX,KAAF;MACJC,KADI;MAEJW,YAFI;MAGJF;IAHI,IAIF,KAAKR,KAJT;IAKA,oBACE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE;MAAO,OAAO,EAAC,OAAf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,aAEG,GAFH,eAGE;MACE,EAAE,EAAC,OADL;MAEE,IAAI,EAAC,OAFP;MAGE,IAAI,EAAC,OAHP;MAIE,KAAK,EAAGF,KAJV;MAKE,QAAQ,EAAG,KAAKN,aALlB;MAME,eAAY,aANd;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAHF,CADF,eAaE;MAAO,OAAO,EAAC,OAAf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,aAEG,GAFH,eAGE;MACE,EAAE,EAAC,OADL;MAEE,IAAI,EAAC,UAFP;MAGE,IAAI,EAAC,OAHP;MAIE,KAAK,EAAGO,KAJV;MAKE,QAAQ,EAAG,KAAKP,aALlB;MAME,eAAY,gBANd;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAHF,CAbF,eAyBE,oBAAC,IAAD;MAAM,EAAE,EAAC,QAAT;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE;MACE,IAAI,EAAC,QADP;MAEE,OAAO,EAAGkB,YAFZ;MAGE,QAAQ,EAAGF,gBAHb;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,YADF,CAzBF,CADF;EAqCD;;AAvEiC;;AA0EpC,MAAMG,kBAAkB,GAAIC,QAAD,KAAe;EACxCC,SAAS,EAAGC,MAAD,IAAYF,QAAQ,CAACxB,UAAU,CAAC2B,KAAD,CAAX;AADS,CAAf,CAA3B;;AAIA,eAAe7B,OAAO,GAAGG,KAAH,CAAtB,C,CACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}